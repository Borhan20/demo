name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Run Spring Boot Tests
        run: mvn test

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      - name: Build Docker image
        run: docker build -t borhan20/demo .


      - name: Push Docker image to Docker Hub
        run: docker push borhan20/demo:latest

      - name: Deploy to Production
        run: |
          docker compose up -d --build
          # Example of deploying to a server or cloud provider
          # This step is highly specific to your deployment environment
          # For example, use SSH to copy the Docker image and run it on a server
      - name: Install ngrok
        run: |
          curl -s https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null
          echo "deb https://ngrok-agent.s3.amazonaws.com buster main" | sudo tee /etc/apt/sources.list.d/ngrok.list
          sudo apt update && sudo apt install ngrok

      - name: Authenticate ngrok
        run: |
          ngrok authtoken ${{ secrets.NGROK_AUTH_TOKEN }}
          ngrok http 8080 > /dev/null &
          sleep 5

      - name: Get ngrok URL
        run: curl http://127.0.0.1:8080/api/tunnels